/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 01 19:16:08 GMT 2019
 */

import com.fasterxml.jackson.databind.JsonNode;
import com.krizsanandras.projectwob.GetData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.Test;
import org.junit.runner.RunWith;

import static org.evosuite.runtime.EvoAssertions.verifyException;
import static org.junit.Assert.*;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetData_ESTest extends GetData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://my.api.mockaroo.com/null?key=java.lang.String@0000000121");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "com.fasterxml.jackson.databind.util.RawValue");
      GetData getData0 = new GetData();
      JsonNode jsonNode0 = getData0.getRestData(null);
      assertNull(jsonNode0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GetData getData0 = new GetData();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://my.api.mockaroo.com/null?key=java.lang.String@0000000121");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "8");
      JsonNode jsonNode0 = getData0.getRestData(null);
      assertFalse(jsonNode0.isBigInteger());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://my.api.mockaroo.com/?key=java.lang.String@0000000121");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      GetData getData0 = new GetData();
      // Undeclared exception!
      try { 
        getData0.getRestData("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GetData getData0 = new GetData();
      // Undeclared exception!
      try { 
        getData0.getRestData("Ru{744Nlw:P}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not enough variable values available to expand '744Nlw'
         //
         verifyException("org.springframework.web.util.UriComponents$VarArgsTemplateVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GetData getData0 = new GetData();
      // Undeclared exception!
      try { 
        getData0.getRestData("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 404 Not Found
         //
         verifyException("org.springframework.web.client.HttpClientErrorException", e);
      }
  }
}
